"use strict";(self.webpackChunkdemos=self.webpackChunkdemos||[]).push([[2430],{52430:(l,a,s)=>{s.r(a),s.d(a,{sources:()=>n});const n=[{filename:"component.ts",contents:{raw:s(93080),highlighted:s(77812)}},{filename:"template.html",contents:{raw:s(89542),highlighted:s(90017)}},{filename:"styles.scss",contents:{raw:s(55154),highlighted:s(37083)}},{filename:"module.ts",contents:{raw:s(66250),highlighted:s(66900)}}]},77812:(l,a,s)=>{s.r(a),s.d(a,{default:()=>n});const n='<span class="hljs-keyword">import</span> {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CalendarEvent, CalendarView } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { Subject } from <span class="hljs-string">\'rxjs\'</span>;\n<span class="hljs-keyword">import</span> { colors } from <span class="hljs-string">\'../demo-utils/colors\'</span>;\n\n@Component({\n  selector: <span class="hljs-string">\'mwl-demo-component\'</span>,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: <span class="hljs-string">\'template.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./styles.scss\'</span>],\n  encapsulation: ViewEncapsulation.None,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoComponent {\n  view: CalendarView = CalendarView.Month;\n\n  viewDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n\n  events: CalendarEvent[] = [];\n\n  refresh = <span class="hljs-keyword">new</span> Subject&lt;<span class="hljs-built_in">void</span>&gt;();\n\n  addEvent(date: <span class="hljs-built_in">Date</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.events.push({\n      start: date,\n      title: <span class="hljs-string">\'New event\'</span>,\n      color: colors.red,\n    });\n    <span class="hljs-keyword">this</span>.refresh.next();\n  }\n}\n'},66900:(l,a,s)=>{s.r(a),s.d(a,{default:()=>n});const n='<span class="hljs-keyword">import</span> { NgModule } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } from <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { RouterModule } from <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { CalendarModule, DateAdapter } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { ContextMenuModule } from <span class="hljs-string">\'@perfectmemory/ngx-contextmenu\'</span>;\n<span class="hljs-keyword">import</span> { DemoUtilsModule } from <span class="hljs-string">\'../demo-utils/module\'</span>;\n<span class="hljs-keyword">import</span> { DemoComponent } from <span class="hljs-string">\'./component\'</span>;\n<span class="hljs-keyword">import</span> { adapterFactory } from <span class="hljs-string">\'angular-calendar/date-adapters/date-fns\'</span>;\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    ContextMenuModule,\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: <span class="hljs-string">\'\'</span>, component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule {}\n'},37083:(l,a,s)=>{s.r(a),s.d(a,{default:()=>n});const n="@import '@angular/cdk/overlay-prebuilt.css';\n@import 'node_modules/@perfectmemory/ngx-contextmenu/src/assets/stylesheets/base';\n\n.month-cell-fill-height {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n"},90017:(l,a,s)=>{s.r(a),s.d(a,{default:()=>n});const n='<span class="hljs-tag">&lt;<span class="hljs-title">mwl-demo-utils-calendar-header</span> [(<span class="hljs-attribute">view</span>)]=<span class="hljs-value">"view"</span> [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">mwl-demo-utils-calendar-header</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">context-menu</span> #<span class="hljs-attribute">basicMenu</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">ng-template</span> <span class="hljs-attribute">contextMenuItem</span> (<span class="hljs-attribute">execute</span>)=<span class="hljs-value">"addEvent($event.value)"</span>&gt;</span>\n    Add event\n  <span class="hljs-tag">&lt;/<span class="hljs-title">ng-template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">context-menu</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">ng-template</span>\n  #<span class="hljs-attribute">monthCellTemplate</span>\n  <span class="hljs-attribute">let-day</span>=<span class="hljs-value">"day"</span>\n  <span class="hljs-attribute">let-openDay</span>=<span class="hljs-value">"openDay"</span>\n  <span class="hljs-attribute">let-locale</span>=<span class="hljs-value">"locale"</span>\n  <span class="hljs-attribute">let-tooltipPlacement</span>=<span class="hljs-value">"tooltipPlacement"</span>\n  <span class="hljs-attribute">let-highlightDay</span>=<span class="hljs-value">"highlightDay"</span>\n  <span class="hljs-attribute">let-unhighlightDay</span>=<span class="hljs-value">"unhighlightDay"</span>\n  <span class="hljs-attribute">let-eventClicked</span>=<span class="hljs-value">"eventClicked"</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n    <span class="hljs-attribute">class</span>=<span class="hljs-value">"month-cell-fill-height"</span>\n    [<span class="hljs-attribute">contextMenu</span>]=<span class="hljs-value">"basicMenu"</span>\n    [<span class="hljs-attribute">contextMenuValue</span>]=<span class="hljs-value">"day.date"</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-cell-top"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-day-badge"</span> *<span class="hljs-attribute">ngIf</span>=<span class="hljs-value">"day.badgeTotal &gt; 0"</span>\n        &gt;</span>{{ day.badgeTotal }}<span class="hljs-tag">&lt;/<span class="hljs-title">span</span>\n      &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-day-number"</span>\n        &gt;</span>{{ day.date | calendarDate:\'monthViewDayNumber\':locale }}<span class="hljs-tag">&lt;/<span class="hljs-title">span</span>\n      &gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-events"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-event"</span>\n        *<span class="hljs-attribute">ngFor</span>=<span class="hljs-value">"let event of day.events"</span>\n        [<span class="hljs-attribute">style.backgroundColor</span>]=<span class="hljs-value">"event.color.primary"</span>\n        [<span class="hljs-attribute">ngClass</span>]=<span class="hljs-value">"event?.cssClass"</span>\n        (<span class="hljs-attribute">mouseenter</span>)=<span class="hljs-value">"highlightDay.emit({event: event})"</span>\n        (<span class="hljs-attribute">mouseleave</span>)=<span class="hljs-value">"unhighlightDay.emit({event: event})"</span>\n        [<span class="hljs-attribute">mwlCalendarTooltip</span>]=<span class="hljs-value">"event.title | calendarEventTitle:\'monthTooltip\':event"</span>\n        [<span class="hljs-attribute">tooltipPlacement</span>]=<span class="hljs-value">"tooltipPlacement"</span>\n        (<span class="hljs-attribute">click</span>)=<span class="hljs-value">"$event.stopPropagation(); eventClicked.emit({event: event})"</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">ng-template</span>\n  #<span class="hljs-attribute">weekHeaderTemplate</span>\n  <span class="hljs-attribute">let-days</span>=<span class="hljs-value">"days"</span>\n  <span class="hljs-attribute">let-locale</span>=<span class="hljs-value">"locale"</span>\n  <span class="hljs-attribute">let-dayHeaderClicked</span>=<span class="hljs-value">"dayHeaderClicked"</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-day-headers"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n      <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-header"</span>\n      *<span class="hljs-attribute">ngFor</span>=<span class="hljs-value">"let day of days"</span>\n      [<span class="hljs-attribute">class.cal-past</span>]=<span class="hljs-value">"day.isPast"</span>\n      [<span class="hljs-attribute">class.cal-today</span>]=<span class="hljs-value">"day.isToday"</span>\n      [<span class="hljs-attribute">class.cal-future</span>]=<span class="hljs-value">"day.isFuture"</span>\n      [<span class="hljs-attribute">class.cal-weekend</span>]=<span class="hljs-value">"day.isWeekend"</span>\n      (<span class="hljs-attribute">click</span>)=<span class="hljs-value">"dayHeaderClicked.emit({day: day})"</span>\n      [<span class="hljs-attribute">contextMenu</span>]=<span class="hljs-value">"basicMenu"</span>\n      [<span class="hljs-attribute">contextMenuValue</span>]=<span class="hljs-value">"day.date"</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">b</span>&gt;</span>{{ day.date | calendarDate:\'weekViewColumnHeader\':locale }}<span class="hljs-tag">&lt;/<span class="hljs-title">b</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">br</span> /&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">span</span>\n        &gt;</span>{{ day.date | calendarDate:\'weekViewColumnSubHeader\':locale }}<span class="hljs-tag">&lt;/<span class="hljs-title">span</span>\n      &gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">ng-template</span>\n  #<span class="hljs-attribute">dayHourSegmentTemplate</span>\n  <span class="hljs-attribute">let-segment</span>=<span class="hljs-value">"segment"</span>\n  <span class="hljs-attribute">let-locale</span>=<span class="hljs-value">"locale"</span>\n  <span class="hljs-attribute">let-segmentHeight</span>=<span class="hljs-value">"segmentHeight"</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n    <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-hour-segment"</span>\n    [<span class="hljs-attribute">style.height.px</span>]=<span class="hljs-value">"segmentHeight"</span>\n    [<span class="hljs-attribute">class.cal-hour-start</span>]=<span class="hljs-value">"segment.isStart"</span>\n    [<span class="hljs-attribute">class.cal-after-hour-start</span>]=<span class="hljs-value">"!segment.isStart"</span>\n    [<span class="hljs-attribute">ngClass</span>]=<span class="hljs-value">"segment.cssClass"</span>\n    [<span class="hljs-attribute">contextMenu</span>]=<span class="hljs-value">"basicMenu"</span>\n    [<span class="hljs-attribute">contextMenuValue</span>]=<span class="hljs-value">"segment.date"</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-time"</span>&gt;</span>\n      {{ segment.date | calendarDate: \'dayViewHour\':locale }}\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">ng-template</span>\n  #<span class="hljs-attribute">weekViewHourSegment</span>\n  <span class="hljs-attribute">let-segment</span>=<span class="hljs-value">"segment"</span>\n  <span class="hljs-attribute">let-locale</span>=<span class="hljs-value">"locale"</span>\n  <span class="hljs-attribute">let-segmentHeight</span>=<span class="hljs-value">"segmentHeight"</span>\n  <span class="hljs-attribute">let-isTimeLabel</span>=<span class="hljs-value">"isTimeLabel"</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n    <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-hour-segment"</span>\n    [<span class="hljs-attribute">style.height.px</span>]=<span class="hljs-value">"segmentHeight"</span>\n    [<span class="hljs-attribute">class.cal-hour-start</span>]=<span class="hljs-value">"segment.isStart"</span>\n    [<span class="hljs-attribute">class.cal-after-hour-start</span>]=<span class="hljs-value">"!segment.isStart"</span>\n    [<span class="hljs-attribute">ngClass</span>]=<span class="hljs-value">"segment.cssClass"</span>\n    [<span class="hljs-attribute">contextMenu</span>]=<span class="hljs-value">"basicMenu"</span>\n    [<span class="hljs-attribute">contextMenuValue</span>]=<span class="hljs-value">"segment.date"</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-time"</span> *<span class="hljs-attribute">ngIf</span>=<span class="hljs-value">"isTimeLabel"</span>&gt;</span>\n      {{ segment.date | calendarDate: \'weekViewHour\':locale }}\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">div</span> [<span class="hljs-attribute">ngSwitch</span>]=<span class="hljs-value">"view"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-month-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'month\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n    [<span class="hljs-attribute">refresh</span>]=<span class="hljs-value">"refresh"</span>\n    [<span class="hljs-attribute">cellTemplate</span>]=<span class="hljs-value">"monthCellTemplate"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-month-view</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-week-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'week\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n    [<span class="hljs-attribute">refresh</span>]=<span class="hljs-value">"refresh"</span>\n    [<span class="hljs-attribute">headerTemplate</span>]=<span class="hljs-value">"weekHeaderTemplate"</span>\n    [<span class="hljs-attribute">hourSegmentTemplate</span>]=<span class="hljs-value">"weekViewHourSegment"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-week-view</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-day-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'day\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n    [<span class="hljs-attribute">refresh</span>]=<span class="hljs-value">"refresh"</span>\n    [<span class="hljs-attribute">hourSegmentTemplate</span>]=<span class="hljs-value">"dayHourSegmentTemplate"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-day-view</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n'},93080:(l,a,s)=>{s.r(a),s.d(a,{default:()=>n});const n="import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CalendarEvent, CalendarView } from 'angular-calendar';\nimport { Subject } from 'rxjs';\nimport { colors } from '../demo-utils/colors';\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n  styleUrls: ['./styles.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DemoComponent {\n  view: CalendarView = CalendarView.Month;\n\n  viewDate = new Date();\n\n  events: CalendarEvent[] = [];\n\n  refresh = new Subject<void>();\n\n  addEvent(date: Date): void {\n    this.events.push({\n      start: date,\n      title: 'New event',\n      color: colors.red,\n    });\n    this.refresh.next();\n  }\n}\n"},66250:(l,a,s)=>{s.r(a),s.d(a,{default:()=>n});const n="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { ContextMenuModule } from '@perfectmemory/ngx-contextmenu';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    ContextMenuModule,\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"},55154:(l,a,s)=>{s.r(a),s.d(a,{default:()=>n});const n="@import '@angular/cdk/overlay-prebuilt.css';\n@import 'node_modules/@perfectmemory/ngx-contextmenu/src/assets/stylesheets/base';\n\n.month-cell-fill-height {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n"},89542:(l,a,s)=>{s.r(a),s.d(a,{default:()=>n});const n='<mwl-demo-utils-calendar-header [(view)]="view" [(viewDate)]="viewDate">\n</mwl-demo-utils-calendar-header>\n\n<context-menu #basicMenu>\n  <ng-template contextMenuItem (execute)="addEvent($event.value)">\n    Add event\n  </ng-template>\n</context-menu>\n\n<ng-template\n  #monthCellTemplate\n  let-day="day"\n  let-openDay="openDay"\n  let-locale="locale"\n  let-tooltipPlacement="tooltipPlacement"\n  let-highlightDay="highlightDay"\n  let-unhighlightDay="unhighlightDay"\n  let-eventClicked="eventClicked"\n>\n  <div\n    class="month-cell-fill-height"\n    [contextMenu]="basicMenu"\n    [contextMenuValue]="day.date"\n  >\n    <div class="cal-cell-top">\n      <span class="cal-day-badge" *ngIf="day.badgeTotal > 0"\n        >{{ day.badgeTotal }}</span\n      >\n      <span class="cal-day-number"\n        >{{ day.date | calendarDate:\'monthViewDayNumber\':locale }}</span\n      >\n    </div>\n    <div class="cal-events">\n      <div\n        class="cal-event"\n        *ngFor="let event of day.events"\n        [style.backgroundColor]="event.color.primary"\n        [ngClass]="event?.cssClass"\n        (mouseenter)="highlightDay.emit({event: event})"\n        (mouseleave)="unhighlightDay.emit({event: event})"\n        [mwlCalendarTooltip]="event.title | calendarEventTitle:\'monthTooltip\':event"\n        [tooltipPlacement]="tooltipPlacement"\n        (click)="$event.stopPropagation(); eventClicked.emit({event: event})"\n      ></div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template\n  #weekHeaderTemplate\n  let-days="days"\n  let-locale="locale"\n  let-dayHeaderClicked="dayHeaderClicked"\n>\n  <div class="cal-day-headers">\n    <div\n      class="cal-header"\n      *ngFor="let day of days"\n      [class.cal-past]="day.isPast"\n      [class.cal-today]="day.isToday"\n      [class.cal-future]="day.isFuture"\n      [class.cal-weekend]="day.isWeekend"\n      (click)="dayHeaderClicked.emit({day: day})"\n      [contextMenu]="basicMenu"\n      [contextMenuValue]="day.date"\n    >\n      <b>{{ day.date | calendarDate:\'weekViewColumnHeader\':locale }}</b><br />\n      <span\n        >{{ day.date | calendarDate:\'weekViewColumnSubHeader\':locale }}</span\n      >\n    </div>\n  </div>\n</ng-template>\n\n<ng-template\n  #dayHourSegmentTemplate\n  let-segment="segment"\n  let-locale="locale"\n  let-segmentHeight="segmentHeight"\n>\n  <div\n    class="cal-hour-segment"\n    [style.height.px]="segmentHeight"\n    [class.cal-hour-start]="segment.isStart"\n    [class.cal-after-hour-start]="!segment.isStart"\n    [ngClass]="segment.cssClass"\n    [contextMenu]="basicMenu"\n    [contextMenuValue]="segment.date"\n  >\n    <div class="cal-time">\n      {{ segment.date | calendarDate: \'dayViewHour\':locale }}\n    </div>\n  </div>\n</ng-template>\n\n<ng-template\n  #weekViewHourSegment\n  let-segment="segment"\n  let-locale="locale"\n  let-segmentHeight="segmentHeight"\n  let-isTimeLabel="isTimeLabel"\n>\n  <div\n    class="cal-hour-segment"\n    [style.height.px]="segmentHeight"\n    [class.cal-hour-start]="segment.isStart"\n    [class.cal-after-hour-start]="!segment.isStart"\n    [ngClass]="segment.cssClass"\n    [contextMenu]="basicMenu"\n    [contextMenuValue]="segment.date"\n  >\n    <div class="cal-time" *ngIf="isTimeLabel">\n      {{ segment.date | calendarDate: \'weekViewHour\':locale }}\n    </div>\n  </div>\n</ng-template>\n\n<div [ngSwitch]="view">\n  <mwl-calendar-month-view\n    *ngSwitchCase="\'month\'"\n    [viewDate]="viewDate"\n    [events]="events"\n    [refresh]="refresh"\n    [cellTemplate]="monthCellTemplate"\n  >\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase="\'week\'"\n    [viewDate]="viewDate"\n    [events]="events"\n    [refresh]="refresh"\n    [headerTemplate]="weekHeaderTemplate"\n    [hourSegmentTemplate]="weekViewHourSegment"\n  >\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase="\'day\'"\n    [viewDate]="viewDate"\n    [events]="events"\n    [refresh]="refresh"\n    [hourSegmentTemplate]="dayHourSegmentTemplate"\n  >\n  </mwl-calendar-day-view>\n</div>\n'}}]);