"use strict";(self.webpackChunkdemos=self.webpackChunkdemos||[]).push([[2513],{82513:(e,n,s)=>{s.r(n),s.d(n,{sources:()=>a});const a=[{filename:"component.ts",contents:{raw:s(5891),highlighted:s(32973)}},{filename:"template.html",contents:{raw:s(25316),highlighted:s(41751)}},{filename:"module.ts",contents:{raw:s(72956),highlighted:s(54055)}}]},32973:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-keyword">import</span> {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Injectable,\n  ViewEncapsulation,\n} from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CalendarEvent, CalendarEventTitleFormatter } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { WeekViewHourSegment } from <span class="hljs-string">\'calendar-utils\'</span>;\n<span class="hljs-keyword">import</span> { fromEvent } from <span class="hljs-string">\'rxjs\'</span>;\n<span class="hljs-keyword">import</span> { finalize, takeUntil } from <span class="hljs-string">\'rxjs/operators\'</span>;\n<span class="hljs-keyword">import</span> { addDays, addMinutes, endOfWeek } from <span class="hljs-string">\'date-fns\'</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">floorToNearest</span>(<span class="hljs-params">amount: <span class="hljs-built_in">number</span>, precision: <span class="hljs-built_in">number</span></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(amount / precision) * precision;\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ceilToNearest</span>(<span class="hljs-params">amount: <span class="hljs-built_in">number</span>, precision: <span class="hljs-built_in">number</span></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.ceil(amount / precision) * precision;\n}\n\n@Injectable()\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n  weekTooltip(event: CalendarEvent, title: <span class="hljs-built_in">string</span>) {\n    <span class="hljs-keyword">if</span> (!event.meta.tmpEvent) {\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.weekTooltip(event, title);\n    }\n  }\n\n  dayTooltip(event: CalendarEvent, title: <span class="hljs-built_in">string</span>) {\n    <span class="hljs-keyword">if</span> (!event.meta.tmpEvent) {\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.dayTooltip(event, title);\n    }\n  }\n}\n\n@Component({\n  selector: <span class="hljs-string">\'mwl-demo-component\'</span>,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: <span class="hljs-string">\'template.html\'</span>,\n  providers: [\n    {\n      provide: CalendarEventTitleFormatter,\n      useClass: CustomEventTitleFormatter,\n    },\n  ],\n  styles: [\n    `\n      .disable-hover {\n        pointer-events: none;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoComponent {\n  viewDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n\n  events: CalendarEvent[] = [];\n\n  dragToCreateActive = <span class="hljs-literal">false</span>;\n\n  weekStartsOn: <span class="hljs-number">0</span> = <span class="hljs-number">0</span>;\n\n  <span class="hljs-constructor"><span class="hljs-keyword">constructor</span>(private cdr: ChangeDetectorRef) </span>{}\n\n  startDragToCreate(\n    segment: WeekViewHourSegment,\n    mouseDownEvent: MouseEvent,\n    segmentElement: HTMLElement\n  ) {\n    <span class="hljs-keyword">const</span> dragToSelectEvent: CalendarEvent = {\n      id: <span class="hljs-keyword">this</span>.events.length,\n      title: <span class="hljs-string">\'New event\'</span>,\n      start: segment.date,\n      meta: {\n        tmpEvent: <span class="hljs-literal">true</span>,\n      },\n    };\n    <span class="hljs-keyword">this</span>.events = [...this.events, dragToSelectEvent];\n    <span class="hljs-keyword">const</span> segmentPosition = segmentElement.getBoundingClientRect();\n    <span class="hljs-keyword">this</span>.dragToCreateActive = <span class="hljs-literal">true</span>;\n    <span class="hljs-keyword">const</span> endOfView = endOfWeek(<span class="hljs-keyword">this</span>.viewDate, {\n      weekStartsOn: <span class="hljs-keyword">this</span>.weekStartsOn,\n    });\n\n    fromEvent(<span class="hljs-built_in">document</span>, <span class="hljs-string">\'mousemove\'</span>)\n      .pipe(\n        finalize(() =&gt; {\n          <span class="hljs-keyword">delete</span> dragToSelectEvent.meta.tmpEvent;\n          <span class="hljs-keyword">this</span>.dragToCreateActive = <span class="hljs-literal">false</span>;\n          <span class="hljs-keyword">this</span>.refresh();\n        }),\n        takeUntil(fromEvent(<span class="hljs-built_in">document</span>, <span class="hljs-string">\'mouseup\'</span>))\n      )\n      .subscribe((mouseMoveEvent: MouseEvent) =&gt; {\n        <span class="hljs-keyword">const</span> minutesDiff = ceilToNearest(\n          mouseMoveEvent.clientY - segmentPosition.top,\n          <span class="hljs-number">30</span>\n        );\n\n        <span class="hljs-keyword">const</span> daysDiff =\n          floorToNearest(\n            mouseMoveEvent.clientX - segmentPosition.left,\n            segmentPosition.width\n          ) / segmentPosition.width;\n\n        <span class="hljs-keyword">const</span> newEnd = addDays(addMinutes(segment.date, minutesDiff), daysDiff);\n        <span class="hljs-keyword">if</span> (newEnd &gt; segment.date &amp;&amp; newEnd &lt; endOfView) {\n          dragToSelectEvent.end = newEnd;\n        }\n        <span class="hljs-keyword">this</span>.refresh();\n      });\n  }\n\n  <span class="hljs-keyword">private</span> refresh() {\n    <span class="hljs-keyword">this</span>.events = [...this.events];\n    <span class="hljs-keyword">this</span>.cdr.detectChanges();\n  }\n}\n'},54055:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-keyword">import</span> { NgModule } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } from <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { RouterModule } from <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { CalendarModule, DateAdapter } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { adapterFactory } from <span class="hljs-string">\'angular-calendar/date-adapters/date-fns\'</span>;\n<span class="hljs-keyword">import</span> { DemoComponent } from <span class="hljs-string">\'./component\'</span>;\n<span class="hljs-keyword">import</span> { DemoUtilsModule } from <span class="hljs-string">\'../demo-utils/module\'</span>;\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: <span class="hljs-string">\'\'</span>, component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule {}\n'},41751:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"row"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-md-6"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn-group"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        <span class="hljs-attribute">mwlCalendarPreviousView</span>\n        [<span class="hljs-attribute">view</span>]=<span class="hljs-value">"\'week\'"</span>\n        [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>\n      &gt;</span>\n        Previous\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-outline-secondary"</span>\n        <span class="hljs-attribute">mwlCalendarToday</span>\n        [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>\n      &gt;</span>\n        Today\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        <span class="hljs-attribute">mwlCalendarNextView</span>\n        [<span class="hljs-attribute">view</span>]=<span class="hljs-value">"\'week\'"</span>\n        [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>\n      &gt;</span>\n        Next\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-md-6 text-right"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">h3</span>&gt;</span>{{ viewDate | calendarDate:(\'weekViewTitle\') }}<span class="hljs-tag">&lt;/<span class="hljs-title">h3</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">br</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">ng-template</span>\n  #<span class="hljs-attribute">weekViewHourSegmentTemplate</span>\n  <span class="hljs-attribute">let-segment</span>=<span class="hljs-value">"segment"</span>\n  <span class="hljs-attribute">let-locale</span>=<span class="hljs-value">"locale"</span>\n  <span class="hljs-attribute">let-segmentHeight</span>=<span class="hljs-value">"segmentHeight"</span>\n  <span class="hljs-attribute">let-isTimeLabel</span>=<span class="hljs-value">"isTimeLabel"</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n    #<span class="hljs-attribute">segmentElement</span>\n    <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-hour-segment"</span>\n    [<span class="hljs-attribute">style.height.px</span>]=<span class="hljs-value">"segmentHeight"</span>\n    [<span class="hljs-attribute">class.cal-hour-start</span>]=<span class="hljs-value">"segment.isStart"</span>\n    [<span class="hljs-attribute">class.cal-after-hour-start</span>]=<span class="hljs-value">"!segment.isStart"</span>\n    [<span class="hljs-attribute">ngClass</span>]=<span class="hljs-value">"segment.cssClass"</span>\n    (<span class="hljs-attribute">mousedown</span>)=<span class="hljs-value">"startDragToCreate(segment, $event, segmentElement)"</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-time"</span> *<span class="hljs-attribute">ngIf</span>=<span class="hljs-value">"isTimeLabel"</span>&gt;</span>\n      {{ segment.date | calendarDate:\'weekViewHour\':locale }}\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-week-view</span>\n  [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n  [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n  [<span class="hljs-attribute">hourSegmentTemplate</span>]=<span class="hljs-value">"weekViewHourSegmentTemplate"</span>\n  [<span class="hljs-attribute">weekStartsOn</span>]=<span class="hljs-value">"weekStartsOn"</span>\n&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-week-view</span>&gt;</span>\n'},5891:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a="import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Injectable,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CalendarEvent, CalendarEventTitleFormatter } from 'angular-calendar';\nimport { WeekViewHourSegment } from 'calendar-utils';\nimport { fromEvent } from 'rxjs';\nimport { finalize, takeUntil } from 'rxjs/operators';\nimport { addDays, addMinutes, endOfWeek } from 'date-fns';\n\nfunction floorToNearest(amount: number, precision: number) {\n  return Math.floor(amount / precision) * precision;\n}\n\nfunction ceilToNearest(amount: number, precision: number) {\n  return Math.ceil(amount / precision) * precision;\n}\n\n@Injectable()\nexport class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n  weekTooltip(event: CalendarEvent, title: string) {\n    if (!event.meta.tmpEvent) {\n      return super.weekTooltip(event, title);\n    }\n  }\n\n  dayTooltip(event: CalendarEvent, title: string) {\n    if (!event.meta.tmpEvent) {\n      return super.dayTooltip(event, title);\n    }\n  }\n}\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n  providers: [\n    {\n      provide: CalendarEventTitleFormatter,\n      useClass: CustomEventTitleFormatter,\n    },\n  ],\n  styles: [\n    `\n      .disable-hover {\n        pointer-events: none;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DemoComponent {\n  viewDate = new Date();\n\n  events: CalendarEvent[] = [];\n\n  dragToCreateActive = false;\n\n  weekStartsOn: 0 = 0;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  startDragToCreate(\n    segment: WeekViewHourSegment,\n    mouseDownEvent: MouseEvent,\n    segmentElement: HTMLElement\n  ) {\n    const dragToSelectEvent: CalendarEvent = {\n      id: this.events.length,\n      title: 'New event',\n      start: segment.date,\n      meta: {\n        tmpEvent: true,\n      },\n    };\n    this.events = [...this.events, dragToSelectEvent];\n    const segmentPosition = segmentElement.getBoundingClientRect();\n    this.dragToCreateActive = true;\n    const endOfView = endOfWeek(this.viewDate, {\n      weekStartsOn: this.weekStartsOn,\n    });\n\n    fromEvent(document, 'mousemove')\n      .pipe(\n        finalize(() => {\n          delete dragToSelectEvent.meta.tmpEvent;\n          this.dragToCreateActive = false;\n          this.refresh();\n        }),\n        takeUntil(fromEvent(document, 'mouseup'))\n      )\n      .subscribe((mouseMoveEvent: MouseEvent) => {\n        const minutesDiff = ceilToNearest(\n          mouseMoveEvent.clientY - segmentPosition.top,\n          30\n        );\n\n        const daysDiff =\n          floorToNearest(\n            mouseMoveEvent.clientX - segmentPosition.left,\n            segmentPosition.width\n          ) / segmentPosition.width;\n\n        const newEnd = addDays(addMinutes(segment.date, minutesDiff), daysDiff);\n        if (newEnd > segment.date && newEnd < endOfView) {\n          dragToSelectEvent.end = newEnd;\n        }\n        this.refresh();\n      });\n  }\n\n  private refresh() {\n    this.events = [...this.events];\n    this.cdr.detectChanges();\n  }\n}\n"},72956:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { DemoComponent } from './component';\nimport { DemoUtilsModule } from '../demo-utils/module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"},25316:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<div class="row">\n  <div class="col-md-6">\n    <div class="btn-group">\n      <div\n        class="btn btn-primary"\n        mwlCalendarPreviousView\n        [view]="\'week\'"\n        [(viewDate)]="viewDate"\n      >\n        Previous\n      </div>\n      <div\n        class="btn btn-outline-secondary"\n        mwlCalendarToday\n        [(viewDate)]="viewDate"\n      >\n        Today\n      </div>\n      <div\n        class="btn btn-primary"\n        mwlCalendarNextView\n        [view]="\'week\'"\n        [(viewDate)]="viewDate"\n      >\n        Next\n      </div>\n    </div>\n  </div>\n  <div class="col-md-6 text-right">\n    <h3>{{ viewDate | calendarDate:(\'weekViewTitle\') }}</h3>\n  </div>\n</div>\n<br />\n\n<ng-template\n  #weekViewHourSegmentTemplate\n  let-segment="segment"\n  let-locale="locale"\n  let-segmentHeight="segmentHeight"\n  let-isTimeLabel="isTimeLabel"\n>\n  <div\n    #segmentElement\n    class="cal-hour-segment"\n    [style.height.px]="segmentHeight"\n    [class.cal-hour-start]="segment.isStart"\n    [class.cal-after-hour-start]="!segment.isStart"\n    [ngClass]="segment.cssClass"\n    (mousedown)="startDragToCreate(segment, $event, segmentElement)"\n  >\n    <div class="cal-time" *ngIf="isTimeLabel">\n      {{ segment.date | calendarDate:\'weekViewHour\':locale }}\n    </div>\n  </div>\n</ng-template>\n\n<mwl-calendar-week-view\n  [viewDate]="viewDate"\n  [events]="events"\n  [hourSegmentTemplate]="weekViewHourSegmentTemplate"\n  [weekStartsOn]="weekStartsOn"\n>\n</mwl-calendar-week-view>\n'}}]);