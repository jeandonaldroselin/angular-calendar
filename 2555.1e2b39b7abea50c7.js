"use strict";(self.webpackChunkdemos=self.webpackChunkdemos||[]).push([[2555],{12555:(e,s,n)=>{n.r(s),n.d(s,{sources:()=>a});const a=[{filename:"component.ts",contents:{raw:{default:n(33022).Z.replace("8eb2582d-3a4c-4fc5-94c8-3e21487d4e23","REPLACE_WITH_YOUR_OWN_TOKEN")},highlighted:{default:n(24345).Z.replace("8eb2582d-3a4c-4fc5-94c8-3e21487d4e23","REPLACE_WITH_YOUR_OWN_TOKEN")}}},{filename:"template.html",contents:{raw:n(22290),highlighted:n(41954)}},{filename:"module.ts",contents:{raw:n(33844),highlighted:n(33629)}}]},24345:(e,s,n)=>{n.d(s,{Z:()=>a});const a='<span class="hljs-keyword">import</span> {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  ChangeDetectorRef,\n} from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CalendarEvent, CalendarView } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { HttpClient } from <span class="hljs-string">\'@angular/common/http\'</span>;\n<span class="hljs-keyword">import</span> { startOfYear, subYears } from <span class="hljs-string">\'date-fns\'</span>;\n\n<span class="hljs-comment">// get your own key from https://holidayapi.com/</span>\n<span class="hljs-keyword">const</span> HOLIDAY_API_KEY = <span class="hljs-string">\'8eb2582d-3a4c-4fc5-94c8-3e21487d4e23\'</span>;\n\n<span class="hljs-comment">// change this to your own country</span>\n<span class="hljs-keyword">const</span> COUNTRY_CODE = <span class="hljs-string">\'US\'</span>;\n\n<span class="hljs-interface"><span class="hljs-keyword">interface</span> Holiday </span>{\n  date: <span class="hljs-built_in">string</span>;\n  name: <span class="hljs-built_in">string</span>;\n}\n\n<span class="hljs-keyword">type</span> CalendarEventWithMeta = CalendarEvent&lt;\n  { <span class="hljs-keyword">type</span>: <span class="hljs-string">\'holiday\'</span>; holiday: Holiday } | { <span class="hljs-keyword">type</span>: <span class="hljs-string">\'normal\'</span> }\n&gt;;\n\n@Component({\n  selector: <span class="hljs-string">\'mwl-demo-component\'</span>,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: <span class="hljs-string">\'template.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoComponent <span class="hljs-keyword">implements</span> OnInit {\n  view: CalendarView = CalendarView.Month;\n\n  viewDate = startOfYear(subYears(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(), <span class="hljs-number">1</span>));\n\n  events: CalendarEventWithMeta[] = [];\n\n  <span class="hljs-constructor"><span class="hljs-keyword">constructor</span>(private http: HttpClient, private cdr: ChangeDetectorRef) </span>{}\n\n  ngOnInit(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.fetchHolidays();\n  }\n\n  <span class="hljs-keyword">private</span> fetchHolidays() {\n    <span class="hljs-keyword">this</span>.http\n      .get&lt;{ holidays: Holiday[] }&gt;(<span class="hljs-string">\'https://holidayapi.com/v1/holidays\'</span>, {\n        params: {\n          country: COUNTRY_CODE,\n          year: <span class="hljs-built_in">String</span>(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getFullYear() - <span class="hljs-number">1</span>),\n          key: HOLIDAY_API_KEY,\n        },\n      })\n      .subscribe(({ holidays }) =&gt; {\n        <span class="hljs-keyword">this</span>.events = holidays.map((holiday) =&gt; {\n          <span class="hljs-keyword">return</span> {\n            start: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(holiday.date),\n            title: holiday.name,\n            allDay: <span class="hljs-literal">true</span>,\n            meta: {\n              <span class="hljs-keyword">type</span>: <span class="hljs-string">\'holiday\'</span>,\n              holiday,\n            },\n          };\n        });\n        <span class="hljs-keyword">this</span>.cdr.markForCheck();\n      });\n  }\n}\n'},33629:(e,s,n)=>{n.r(s),n.d(s,{default:()=>a});const a='<span class="hljs-keyword">import</span> { NgModule } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } from <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { RouterModule } from <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { CalendarModule, DateAdapter } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { DemoUtilsModule } from <span class="hljs-string">\'../demo-utils/module\'</span>;\n<span class="hljs-keyword">import</span> { DemoComponent } from <span class="hljs-string">\'./component\'</span>;\n<span class="hljs-keyword">import</span> { adapterFactory } from <span class="hljs-string">\'angular-calendar/date-adapters/date-fns\'</span>;\n<span class="hljs-keyword">import</span> { HttpClientModule } from <span class="hljs-string">\'@angular/common/http\'</span>;\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    HttpClientModule,\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: <span class="hljs-string">\'\'</span>, component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule {}\n'},41954:(e,s,n)=>{n.r(s),n.d(s,{default:()=>a});const a='<span class="hljs-tag">&lt;<span class="hljs-title">mwl-demo-utils-calendar-header</span> [(<span class="hljs-attribute">view</span>)]=<span class="hljs-value">"view"</span> [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">mwl-demo-utils-calendar-header</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">div</span> [<span class="hljs-attribute">ngSwitch</span>]=<span class="hljs-value">"view"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-month-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'month\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-month-view</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-week-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'week\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-week-view</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-day-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'day\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-day-view</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n'},33022:(e,s,n)=>{n.d(s,{Z:()=>a});const a="import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { CalendarEvent, CalendarView } from 'angular-calendar';\nimport { HttpClient } from '@angular/common/http';\nimport { startOfYear, subYears } from 'date-fns';\n\n// get your own key from https://holidayapi.com/\nconst HOLIDAY_API_KEY = '8eb2582d-3a4c-4fc5-94c8-3e21487d4e23';\n\n// change this to your own country\nconst COUNTRY_CODE = 'US';\n\ninterface Holiday {\n  date: string;\n  name: string;\n}\n\ntype CalendarEventWithMeta = CalendarEvent<\n  { type: 'holiday'; holiday: Holiday } | { type: 'normal' }\n>;\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n})\nexport class DemoComponent implements OnInit {\n  view: CalendarView = CalendarView.Month;\n\n  viewDate = startOfYear(subYears(new Date(), 1));\n\n  events: CalendarEventWithMeta[] = [];\n\n  constructor(private http: HttpClient, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.fetchHolidays();\n  }\n\n  private fetchHolidays() {\n    this.http\n      .get<{ holidays: Holiday[] }>('https://holidayapi.com/v1/holidays', {\n        params: {\n          country: COUNTRY_CODE,\n          year: String(new Date().getFullYear() - 1),\n          key: HOLIDAY_API_KEY,\n        },\n      })\n      .subscribe(({ holidays }) => {\n        this.events = holidays.map((holiday) => {\n          return {\n            start: new Date(holiday.date),\n            title: holiday.name,\n            allDay: true,\n            meta: {\n              type: 'holiday',\n              holiday,\n            },\n          };\n        });\n        this.cdr.markForCheck();\n      });\n  }\n}\n"},33844:(e,s,n)=>{n.r(s),n.d(s,{default:()=>a});const a="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    HttpClientModule,\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"},22290:(e,s,n)=>{n.r(s),n.d(s,{default:()=>a});const a='<mwl-demo-utils-calendar-header [(view)]="view" [(viewDate)]="viewDate">\n</mwl-demo-utils-calendar-header>\n\n<div [ngSwitch]="view">\n  <mwl-calendar-month-view\n    *ngSwitchCase="\'month\'"\n    [viewDate]="viewDate"\n    [events]="events"\n  >\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase="\'week\'"\n    [viewDate]="viewDate"\n    [events]="events"\n  >\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase="\'day\'"\n    [viewDate]="viewDate"\n    [events]="events"\n  >\n  </mwl-calendar-day-view>\n</div>\n'}}]);