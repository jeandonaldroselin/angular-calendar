"use strict";(self.webpackChunkdemos=self.webpackChunkdemos||[]).push([[4722],{84722:(l,n,s)=>{s.r(n),s.d(n,{sources:()=>a});const a=[{filename:"component.ts",contents:{raw:s(82465),highlighted:s(33933)}},{filename:"template.html",contents:{raw:s(80767),highlighted:s(35662)}},{filename:"styles.scss",contents:{raw:s(53675),highlighted:s(81487)}},{filename:"module.ts",contents:{raw:s(29587),highlighted:s(36546)}}]},33933:(l,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-keyword">import</span> { Component, ChangeDetectionStrategy } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { getHours } from <span class="hljs-string">\'date-fns\'</span>;\n\n@Component({\n  selector: <span class="hljs-string">\'mwl-demo-component\'</span>,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: <span class="hljs-string">\'./template.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./styles.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoComponent {\n  viewDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n\n  showMarker = <span class="hljs-literal">true</span>;\n\n  <span class="hljs-comment">// just for the purposes of the demo so it all fits in one screen</span>\n  dayStartHour = <span class="hljs-built_in">Math</span>.max(<span class="hljs-number">0</span>, getHours(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()) - <span class="hljs-number">2</span>);\n\n  dayEndHour = <span class="hljs-built_in">Math</span>.min(<span class="hljs-number">23</span>, getHours(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()) + <span class="hljs-number">2</span>);\n}\n'},36546:(l,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-keyword">import</span> { NgModule } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } from <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { RouterModule } from <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { CalendarModule, DateAdapter } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { DemoUtilsModule } from <span class="hljs-string">\'../demo-utils/module\'</span>;\n<span class="hljs-keyword">import</span> { DemoComponent } from <span class="hljs-string">\'./component\'</span>;\n<span class="hljs-keyword">import</span> { adapterFactory } from <span class="hljs-string">\'angular-calendar/date-adapters/date-fns\'</span>;\n<span class="hljs-keyword">import</span> { FormsModule } from <span class="hljs-string">\'@angular/forms\'</span>;\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: <span class="hljs-string">\'\'</span>, component: DemoComponent }]),\n    FormsModule,\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule {}\n'},81487:(l,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a=".cal-current-time-marker {\n  height: 3px;\n  background: linear-gradient(270deg, #ec268d, #1f55dd);\n  background-size: 400% 400%;\n  animation: background-fade 5s ease infinite;\n\n  @keyframes background-fade {\n    0% {\n      background-position: 0 50%;\n    }\n\n    50% {\n      background-position: 100% 50%;\n    }\n\n    100% {\n      background-position: 0 50%;\n    }\n  }\n}\n"},35662:(l,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-tag">&lt;<span class="hljs-title">ng-template</span>\n  #<span class="hljs-attribute">currentTimeMarkerTemplate</span>\n  <span class="hljs-attribute">let-columnDate</span>=<span class="hljs-value">"columnDate"</span>\n  <span class="hljs-attribute">let-dayStartHour</span>=<span class="hljs-value">"dayStartHour"</span>\n  <span class="hljs-attribute">let-dayStartMinute</span>=<span class="hljs-value">"dayStartMinute"</span>\n  <span class="hljs-attribute">let-dayEndHour</span>=<span class="hljs-value">"dayEndHour"</span>\n  <span class="hljs-attribute">let-dayEndMinute</span>=<span class="hljs-value">"dayEndMinute"</span>\n  <span class="hljs-attribute">let-isVisible</span>=<span class="hljs-value">"isVisible"</span>\n  <span class="hljs-attribute">let-topPx</span>=<span class="hljs-value">"topPx"</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n    <span class="hljs-attribute">class</span>=<span class="hljs-value">"cal-current-time-marker"</span>\n    *<span class="hljs-attribute">ngIf</span>=<span class="hljs-value">"isVisible &amp;&amp; showMarker"</span>\n    [<span class="hljs-attribute">style.top.px</span>]=<span class="hljs-value">"topPx"</span>\n  &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"form-group form-check"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">input</span>\n    <span class="hljs-attribute">type</span>=<span class="hljs-value">"checkbox"</span>\n    <span class="hljs-attribute">class</span>=<span class="hljs-value">"form-check-input"</span>\n    <span class="hljs-attribute">id</span>=<span class="hljs-value">"showMarker"</span>\n    [(<span class="hljs-attribute">ngModel</span>)]=<span class="hljs-value">"showMarker"</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">label</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"form-check-label"</span> <span class="hljs-attribute">for</span>=<span class="hljs-value">"showMarker"</span>&gt;</span>Show marker<span class="hljs-tag">&lt;/<span class="hljs-title">label</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-week-view</span>\n  [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n  [<span class="hljs-attribute">currentTimeMarkerTemplate</span>]=<span class="hljs-value">"currentTimeMarkerTemplate"</span>\n  [<span class="hljs-attribute">dayStartHour</span>]=<span class="hljs-value">"dayStartHour"</span>\n  [<span class="hljs-attribute">dayEndHour</span>]=<span class="hljs-value">"dayEndHour"</span>\n&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-week-view</span>&gt;</span>\n'},82465:(l,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a="import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { getHours } from 'date-fns';\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './template.html',\n  styleUrls: ['./styles.scss'],\n})\nexport class DemoComponent {\n  viewDate = new Date();\n\n  showMarker = true;\n\n  // just for the purposes of the demo so it all fits in one screen\n  dayStartHour = Math.max(0, getHours(new Date()) - 2);\n\n  dayEndHour = Math.min(23, getHours(new Date()) + 2);\n}\n"},29587:(l,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n    FormsModule,\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"},53675:(l,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a=".cal-current-time-marker {\n  height: 3px;\n  background: linear-gradient(270deg, #ec268d, #1f55dd);\n  background-size: 400% 400%;\n  animation: background-fade 5s ease infinite;\n\n  @keyframes background-fade {\n    0% {\n      background-position: 0 50%;\n    }\n\n    50% {\n      background-position: 100% 50%;\n    }\n\n    100% {\n      background-position: 0 50%;\n    }\n  }\n}\n"},80767:(l,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<ng-template\n  #currentTimeMarkerTemplate\n  let-columnDate="columnDate"\n  let-dayStartHour="dayStartHour"\n  let-dayStartMinute="dayStartMinute"\n  let-dayEndHour="dayEndHour"\n  let-dayEndMinute="dayEndMinute"\n  let-isVisible="isVisible"\n  let-topPx="topPx"\n>\n  <div\n    class="cal-current-time-marker"\n    *ngIf="isVisible && showMarker"\n    [style.top.px]="topPx"\n  ></div>\n</ng-template>\n\n<div class="form-group form-check">\n  <input\n    type="checkbox"\n    class="form-check-input"\n    id="showMarker"\n    [(ngModel)]="showMarker"\n  />\n  <label class="form-check-label" for="showMarker">Show marker</label>\n</div>\n\n<mwl-calendar-week-view\n  [viewDate]="viewDate"\n  [currentTimeMarkerTemplate]="currentTimeMarkerTemplate"\n  [dayStartHour]="dayStartHour"\n  [dayEndHour]="dayEndHour"\n>\n</mwl-calendar-week-view>\n'}}]);