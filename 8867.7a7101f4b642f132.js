"use strict";(self.webpackChunkdemos=self.webpackChunkdemos||[]).push([[8867],{88867:(e,n,s)=>{s.r(n),s.d(n,{sources:()=>a});const a=[{filename:"component.ts",contents:{raw:s(91885),highlighted:s(29608)}},{filename:"template.html",contents:{raw:s(34982),highlighted:s(97852)}},{filename:"module.ts",contents:{raw:s(36572),highlighted:s(52335)}}]},29608:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-keyword">import</span> {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> {\n  CalendarEvent,\n  CalendarMonthViewDay,\n  CalendarView,\n} from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> {\n  subMonths,\n  addMonths,\n  addDays,\n  addWeeks,\n  subDays,\n  subWeeks,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay,\n} from <span class="hljs-string">\'date-fns\'</span>;\n\n<span class="hljs-keyword">type</span> CalendarPeriod = <span class="hljs-string">\'day\'</span> | <span class="hljs-string">\'week\'</span> | <span class="hljs-string">\'month\'</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addPeriod</span>(<span class="hljs-params">period: CalendarPeriod, date: <span class="hljs-built_in">Date</span>, amount: <span class="hljs-built_in">number</span></span>): <span class="hljs-title">Date</span> </span>{\n  <span class="hljs-keyword">return</span> {\n    day: addDays,\n    week: addWeeks,\n    month: addMonths,\n  }[period](date, amount);\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subPeriod</span>(<span class="hljs-params">period: CalendarPeriod, date: <span class="hljs-built_in">Date</span>, amount: <span class="hljs-built_in">number</span></span>): <span class="hljs-title">Date</span> </span>{\n  <span class="hljs-keyword">return</span> {\n    day: subDays,\n    week: subWeeks,\n    month: subMonths,\n  }[period](date, amount);\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startOfPeriod</span>(<span class="hljs-params">period: CalendarPeriod, date: <span class="hljs-built_in">Date</span></span>): <span class="hljs-title">Date</span> </span>{\n  <span class="hljs-keyword">return</span> {\n    day: startOfDay,\n    week: startOfWeek,\n    month: startOfMonth,\n  }[period](date);\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">endOfPeriod</span>(<span class="hljs-params">period: CalendarPeriod, date: <span class="hljs-built_in">Date</span></span>): <span class="hljs-title">Date</span> </span>{\n  <span class="hljs-keyword">return</span> {\n    day: endOfDay,\n    week: endOfWeek,\n    month: endOfMonth,\n  }[period](date);\n}\n\n@Component({\n  selector: <span class="hljs-string">\'mwl-demo-component\'</span>,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: <span class="hljs-string">\'template.html\'</span>,\n  styles: [\n    `\n      .cal-disabled {\n        background-color: #eee;\n        pointer-events: none;\n      }\n\n      .cal-disabled .cal-day-<span class="hljs-built_in">number</span> {\n        opacity: <span class="hljs-number">0.1</span>;\n      }\n    `,\n  ],\n  <span class="hljs-comment">// this is a hack to get styles to apply to the inner component. Your app should just use a global stylesheet</span>\n  encapsulation: ViewEncapsulation.None,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoComponent {\n  view: CalendarView | CalendarPeriod = CalendarView.Month;\n\n  viewDate: <span class="hljs-built_in">Date</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n\n  events: CalendarEvent[] = [];\n\n  minDate: <span class="hljs-built_in">Date</span> = subMonths(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(), <span class="hljs-number">1</span>);\n\n  maxDate: <span class="hljs-built_in">Date</span> = addMonths(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(), <span class="hljs-number">1</span>);\n\n  prevBtnDisabled: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;\n\n  nextBtnDisabled: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;\n\n  <span class="hljs-constructor"><span class="hljs-keyword">constructor</span>() </span>{\n    <span class="hljs-keyword">this</span>.dateOrViewChanged();\n  }\n\n  increment(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.changeDate(addPeriod(<span class="hljs-keyword">this</span>.view, <span class="hljs-keyword">this</span>.viewDate, <span class="hljs-number">1</span>));\n  }\n\n  decrement(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.changeDate(subPeriod(<span class="hljs-keyword">this</span>.view, <span class="hljs-keyword">this</span>.viewDate, <span class="hljs-number">1</span>));\n  }\n\n  today(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.changeDate(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>());\n  }\n\n  dateIsValid(date: <span class="hljs-built_in">Date</span>): <span class="hljs-built_in">boolean</span> {\n    <span class="hljs-keyword">return</span> date &gt;= <span class="hljs-keyword">this</span>.minDate &amp;&amp; date &lt;= <span class="hljs-keyword">this</span>.maxDate;\n  }\n\n  changeDate(date: <span class="hljs-built_in">Date</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.viewDate = date;\n    <span class="hljs-keyword">this</span>.dateOrViewChanged();\n  }\n\n  changeView(view: CalendarPeriod): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.view = view;\n    <span class="hljs-keyword">this</span>.dateOrViewChanged();\n  }\n\n  dateOrViewChanged(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.prevBtnDisabled = !<span class="hljs-keyword">this</span>.dateIsValid(\n      endOfPeriod(<span class="hljs-keyword">this</span>.view, subPeriod(<span class="hljs-keyword">this</span>.view, <span class="hljs-keyword">this</span>.viewDate, <span class="hljs-number">1</span>))\n    );\n    <span class="hljs-keyword">this</span>.nextBtnDisabled = !<span class="hljs-keyword">this</span>.dateIsValid(\n      startOfPeriod(<span class="hljs-keyword">this</span>.view, addPeriod(<span class="hljs-keyword">this</span>.view, <span class="hljs-keyword">this</span>.viewDate, <span class="hljs-number">1</span>))\n    );\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.viewDate &lt; <span class="hljs-keyword">this</span>.minDate) {\n      <span class="hljs-keyword">this</span>.changeDate(<span class="hljs-keyword">this</span>.minDate);\n    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.viewDate &gt; <span class="hljs-keyword">this</span>.maxDate) {\n      <span class="hljs-keyword">this</span>.changeDate(<span class="hljs-keyword">this</span>.maxDate);\n    }\n  }\n\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): <span class="hljs-built_in">void</span> {\n    body.forEach((day) =&gt; {\n      <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.dateIsValid(day.date)) {\n        day.cssClass = <span class="hljs-string">\'cal-disabled\'</span>;\n      }\n    });\n  }\n}\n'},52335:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-keyword">import</span> { NgModule } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } from <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { RouterModule } from <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { CalendarModule, DateAdapter } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { DemoUtilsModule } from <span class="hljs-string">\'../demo-utils/module\'</span>;\n<span class="hljs-keyword">import</span> { DemoComponent } from <span class="hljs-string">\'./component\'</span>;\n<span class="hljs-keyword">import</span> { adapterFactory } from <span class="hljs-string">\'angular-calendar/date-adapters/date-fns\'</span>;\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: <span class="hljs-string">\'\'</span>, component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule {}\n'},97852:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"row text-center"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-md-4"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn-group"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">button</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        (<span class="hljs-attribute">click</span>)=<span class="hljs-value">"decrement()"</span>\n        [<span class="hljs-attribute">disabled</span>]=<span class="hljs-value">"prevBtnDisabled"</span>\n      &gt;</span>\n        Previous\n      <span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-outline-secondary"</span> (<span class="hljs-attribute">click</span>)=<span class="hljs-value">"today()"</span>&gt;</span>Today<span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">button</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        (<span class="hljs-attribute">click</span>)=<span class="hljs-value">"increment()"</span>\n        [<span class="hljs-attribute">disabled</span>]=<span class="hljs-value">"nextBtnDisabled"</span>\n      &gt;</span>\n        Next\n      <span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-md-4"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">h3</span>&gt;</span>{{ viewDate | calendarDate:(view + \'ViewTitle\'):\'en\' }}<span class="hljs-tag">&lt;/<span class="hljs-title">h3</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-md-4"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn-group"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        (<span class="hljs-attribute">click</span>)=<span class="hljs-value">"changeView(\'month\')"</span>\n        [<span class="hljs-attribute">class.active</span>]=<span class="hljs-value">"view === \'month\'"</span>\n      &gt;</span>\n        Month\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        (<span class="hljs-attribute">click</span>)=<span class="hljs-value">"changeView(\'week\')"</span>\n        [<span class="hljs-attribute">class.active</span>]=<span class="hljs-value">"view === \'week\'"</span>\n      &gt;</span>\n        Week\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        (<span class="hljs-attribute">click</span>)=<span class="hljs-value">"changeView(\'day\')"</span>\n        [<span class="hljs-attribute">class.active</span>]=<span class="hljs-value">"view === \'day\'"</span>\n      &gt;</span>\n        Day\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">br</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">div</span> [<span class="hljs-attribute">ngSwitch</span>]=<span class="hljs-value">"view"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-month-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'month\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n    (<span class="hljs-attribute">beforeViewRender</span>)=<span class="hljs-value">"beforeMonthViewRender($event)"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-month-view</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-week-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'week\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-week-view</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-day-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'day\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n  &gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-day-view</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n'},91885:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a="import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarMonthViewDay,\n  CalendarView,\n} from 'angular-calendar';\nimport {\n  subMonths,\n  addMonths,\n  addDays,\n  addWeeks,\n  subDays,\n  subWeeks,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay,\n} from 'date-fns';\n\ntype CalendarPeriod = 'day' | 'week' | 'month';\n\nfunction addPeriod(period: CalendarPeriod, date: Date, amount: number): Date {\n  return {\n    day: addDays,\n    week: addWeeks,\n    month: addMonths,\n  }[period](date, amount);\n}\n\nfunction subPeriod(period: CalendarPeriod, date: Date, amount: number): Date {\n  return {\n    day: subDays,\n    week: subWeeks,\n    month: subMonths,\n  }[period](date, amount);\n}\n\nfunction startOfPeriod(period: CalendarPeriod, date: Date): Date {\n  return {\n    day: startOfDay,\n    week: startOfWeek,\n    month: startOfMonth,\n  }[period](date);\n}\n\nfunction endOfPeriod(period: CalendarPeriod, date: Date): Date {\n  return {\n    day: endOfDay,\n    week: endOfWeek,\n    month: endOfMonth,\n  }[period](date);\n}\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n  styles: [\n    `\n      .cal-disabled {\n        background-color: #eee;\n        pointer-events: none;\n      }\n\n      .cal-disabled .cal-day-number {\n        opacity: 0.1;\n      }\n    `,\n  ],\n  // this is a hack to get styles to apply to the inner component. Your app should just use a global stylesheet\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DemoComponent {\n  view: CalendarView | CalendarPeriod = CalendarView.Month;\n\n  viewDate: Date = new Date();\n\n  events: CalendarEvent[] = [];\n\n  minDate: Date = subMonths(new Date(), 1);\n\n  maxDate: Date = addMonths(new Date(), 1);\n\n  prevBtnDisabled: boolean = false;\n\n  nextBtnDisabled: boolean = false;\n\n  constructor() {\n    this.dateOrViewChanged();\n  }\n\n  increment(): void {\n    this.changeDate(addPeriod(this.view, this.viewDate, 1));\n  }\n\n  decrement(): void {\n    this.changeDate(subPeriod(this.view, this.viewDate, 1));\n  }\n\n  today(): void {\n    this.changeDate(new Date());\n  }\n\n  dateIsValid(date: Date): boolean {\n    return date >= this.minDate && date <= this.maxDate;\n  }\n\n  changeDate(date: Date): void {\n    this.viewDate = date;\n    this.dateOrViewChanged();\n  }\n\n  changeView(view: CalendarPeriod): void {\n    this.view = view;\n    this.dateOrViewChanged();\n  }\n\n  dateOrViewChanged(): void {\n    this.prevBtnDisabled = !this.dateIsValid(\n      endOfPeriod(this.view, subPeriod(this.view, this.viewDate, 1))\n    );\n    this.nextBtnDisabled = !this.dateIsValid(\n      startOfPeriod(this.view, addPeriod(this.view, this.viewDate, 1))\n    );\n    if (this.viewDate < this.minDate) {\n      this.changeDate(this.minDate);\n    } else if (this.viewDate > this.maxDate) {\n      this.changeDate(this.maxDate);\n    }\n  }\n\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\n    body.forEach((day) => {\n      if (!this.dateIsValid(day.date)) {\n        day.cssClass = 'cal-disabled';\n      }\n    });\n  }\n}\n"},36572:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"},34982:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});const a='<div class="row text-center">\n  <div class="col-md-4">\n    <div class="btn-group">\n      <button\n        class="btn btn-primary"\n        (click)="decrement()"\n        [disabled]="prevBtnDisabled"\n      >\n        Previous\n      </button>\n      <button class="btn btn-outline-secondary" (click)="today()">Today</button>\n      <button\n        class="btn btn-primary"\n        (click)="increment()"\n        [disabled]="nextBtnDisabled"\n      >\n        Next\n      </button>\n    </div>\n  </div>\n  <div class="col-md-4">\n    <h3>{{ viewDate | calendarDate:(view + \'ViewTitle\'):\'en\' }}</h3>\n  </div>\n  <div class="col-md-4">\n    <div class="btn-group">\n      <div\n        class="btn btn-primary"\n        (click)="changeView(\'month\')"\n        [class.active]="view === \'month\'"\n      >\n        Month\n      </div>\n      <div\n        class="btn btn-primary"\n        (click)="changeView(\'week\')"\n        [class.active]="view === \'week\'"\n      >\n        Week\n      </div>\n      <div\n        class="btn btn-primary"\n        (click)="changeView(\'day\')"\n        [class.active]="view === \'day\'"\n      >\n        Day\n      </div>\n    </div>\n  </div>\n</div>\n<br />\n\n<div [ngSwitch]="view">\n  <mwl-calendar-month-view\n    *ngSwitchCase="\'month\'"\n    [viewDate]="viewDate"\n    [events]="events"\n    (beforeViewRender)="beforeMonthViewRender($event)"\n  >\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase="\'week\'"\n    [viewDate]="viewDate"\n    [events]="events"\n  >\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase="\'day\'"\n    [viewDate]="viewDate"\n    [events]="events"\n  >\n  </mwl-calendar-day-view>\n</div>\n'}}]);